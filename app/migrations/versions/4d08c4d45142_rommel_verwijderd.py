"""Rommel verwijderd

Revision ID: 4d08c4d45142
Revises: 72d166bcd164
Create Date: 2022-02-28 20:09:45.683623

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4d08c4d45142'
down_revision = '72d166bcd164'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('contact')
    op.drop_table('contact_group')
    op.drop_table('person')
    op.drop_table('gender')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person',
    sa.Column('herkomst', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('soort', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('brondata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='person_pkey'),
    sa.UniqueConstraint('name', name='person_name_key')
    )
    op.create_table('gender',
    sa.Column('herkomst', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('soort', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('brondata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='gender_pkey'),
    sa.UniqueConstraint('name', name='gender_name_key')
    )
    op.create_table('contact_group',
    sa.Column('herkomst', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('soort', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('brondata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('contact_group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='contact_group_pkey'),
    sa.UniqueConstraint('name', name='contact_group_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('contact',
    sa.Column('herkomst', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('key', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('soort', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('brondata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('_id', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(length=564), autoincrement=False, nullable=True),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('personal_phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('personal_celphone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('contact_group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gender_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['contact_group_id'], ['contact_group.id'], name='contact_contact_group_id_fkey'),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], name='contact_gender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contact_pkey'),
    sa.UniqueConstraint('name', name='contact_name_key')
    )
    
    # ### end Alembic commands ###
