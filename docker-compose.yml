services:
  postgres:
    container_name: "wasstraat_postgres"
    image: wasstraat_postgres
    env_file:
       - ./config/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - wasstraat_postgres_volume:/data/postgres
      #- ./scripts/postgres/:/docker-entrypoint-initdb.d/
      - /Users/arjen/stack2/Wasstraat/backup:/backup
    build: 
      dockerfile: ./services/postgres/Dockerfile
      context: .
    restart: unless-stopped

  airflow:
    container_name: "wasstraat_airflow"
    image: wasstraat_airflow
    env_file:
       - ./config/airflow.env
       - ./config/airflow_db.env
       - ./config/mongo.env
       - ./config/postgres.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - mongo
    volumes:
      # Production settings
       - /Volumes/Extreme SSD/Depot Projecten nieuw:/input/projecten
       - /Volumes/Extreme SSD/Depot Projecten nieuw:/input/images
      # Testing settings
      # - ./data/input/basefiles/projectdatabase/digidepot:/input/projecten
      # - ./data/input/basefiles/projectdatabase/digidepot:/input/images
       - ./data/input/basefiles/projectdatabase/rapporten:/input/rapporten
       - ./data/input/basefiles/projectdatabase/monsterdatabase:/input/monsterdatabase
       - ./data/input/basefiles/projectdatabase/Delf-IT:/input/delfit
       - ./data/input/basefiles/projectdatabase/magazijnlijst:/input/magazijnlijst
       - ./data/input/basefiles/projectdatabase/digifotos:/input/digifotos
       - ./data/input/basefiles/projectdatabase/referentietabellen:/input/referentietabellen
       - /Users/arjen/stack2/Wasstraat/files/archeomedia:/output/archeomedia
       - ./airflow_app/dags:/opt/airflow/dags
       - ./airflow_app/scripts:/opt/airflow/scripts
       - ./airflow_app/.vscode:/opt/airflow/.vscode
       - ./data/wasstraat_config:/opt/airflow/config
       - ./shared:/opt/airflow/dags/shared/
    build: 
      dockerfile: ./services/airflow/Dockerfile
      context: .


  redis:
    image: bitnami/redis    
    container_name: "wasstraat_redis"
    ports:
      - '6379:6379'
    env_file:
      - ./config/redis.env


# Computation
  flask:
    container_name: "wasstraat_flask"
    env_file:
      - ./config/flask.env
      - ./config/postgres.env
      - ./config/mongo.env
      - ./config/redis.env
    ports:
      - '5001:5001'
    depends_on:
      - postgres
      - mongo
      - redis
    volumes:
      - /Users/arjen/stack2/Wasstraat/files/archeomedia:/output/archeomedia


  mongo:
    image: mongo:4.2.21    
    container_name: "wasstraat_mongo"
    ports:
      - '27017:27017'
    env_file:
      - ./config/mongo.env
    volumes:
      - wasstraat_mongo_volume:/data/db
      - /Users/arjen/stack2/Wasstraat/backup:/backup
    restart: unless-stopped

  jupyter:
    container_name: wasstraat_jupyter
    build: 
      dockerfile: ./services/jupyter/Dockerfile
      context: .
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/
      - ./data/wasstraat_config:/home/jovyan/wasstraat_config/
      - ./airflow_app/dags:/opt/wasstraat/
      - ./data/input/basefiles:/home/jovyan/basefiles
      - ./shared:/home/jovyan/shared/
      - ./data/input/basefiles/projectdatabase/digidepot:/input/images
      - /Users/arjen/stack2/Wasstraat/files/archeomedia:/output/archeomedia
      - ./data/input/basefiles/projectdatabase/referentietabellen:/input/referentietabellen
      # - /Volumes/Extreme SSD/Depot Projecten:/input/sdschijf
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
    env_file:
       - ./config/airflow.env
       - ./config/airflow_db.env
       - ./config/mongo.env
       - ./config/postgres.env

  apache:
    container_name: wasstraat_apache
    build: 
      dockerfile: ./services/apache/Dockerfile
      context: .
    volumes:
      - /Users/arjen/stack2/Wasstraat/files:/usr/local/apache2/htdocs
    ports:
      - '5000:5000'


# docker pull docker.elastic.co/elasticsearch/elasticsearch:8.6.1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: wasstraat_elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS= -Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300


volumes:
    wasstraat_postgres_volume:
    wasstraat_mongo_volume:
    elasticsearch-data:
      #driver: local
