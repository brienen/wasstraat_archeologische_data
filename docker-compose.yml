version: '3.5'

services:
  postgres:
    container_name: "wasstraat_postgres"
    image: kartoza/postgis:12.0
    env_file:
       - ./config/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_volume:/data/postgres
      - ./scripts/postgres/:/docker-entrypoint-initdb.d/
 
  airflow:
    container_name: "wasstraat_airflow"
    env_file:
       - ./config/airflow.env
       - ./config/airflow_db.env
       - ./config/mongo.env
       - ./config/postgres.env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - mongo
    volumes:
       - ./data/input/basefiles:/input
       - ./airflow_app/dags:/opt/airflow/dags
       - ./airflow_app/scripts:/opt/airflow/scripts
       - ./data/wasstraat_config:/opt/airflow/config
    build: 
      dockerfile: ./services/airflow/Dockerfile
      context: .

# Computation
  flask:
    container_name: "wasstraat_flask"
    env_file:
      - ./config/flask.env
      - ./config/jupyter.env
      - ./config/postgres.env
      - ./config/mongo.env
    ports:
      - '5050:5050'
    depends_on:
      - postgres
      - mongo
    volumes:
      #- ./examples/polymorph:/app
      - ./data/images:/images
      - ./app:/app
    entrypoint: 'flask run --host=0.0.0.0 --port=5050'
    build: 
      dockerfile: ./services/flask/Dockerfile
      context: .

  mongo:
    image: mongo:4.2    
    container_name: "wasstraat_mongo"
    ports:
      - '27017:27017'
    env_file:
      - ./config/mongo.env
    volumes:
      - mongo_volume:/data/db
      - ./backup:/backup

  jupyter:
    container_name: wasstraat_jupyter
    build: 
      dockerfile: ./services/jupyter/Dockerfile
      context: .
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/
      - ./data/wasstraat_config:/home/jovyan/wasstraat_config/
      - ./airflow_app/dags:/opt/wasstraat/
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
    env_file:
       - ./config/airflow.env
       - ./config/airflow_db.env
       - ./config/mongo.env
       - ./config/postgres.env

volumes:
    postgres_volume:
    mongo_volume: